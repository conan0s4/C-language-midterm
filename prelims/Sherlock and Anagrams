using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'sherlockAndAnagrams' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts STRING s as parameter.
     */

    public static int sherlockAndAnagrams(string s)
    {
        Dictionary<string, int> dict = new Dictionary<string, int>();
        for (int len = 1; len <= s.Length; len++)
        {
            for (int start = 0; start <= s.Length - len; start++)
            {
                string sub = s.Substring(start, len);
                char[] arr = sub.ToCharArray();
                Array.Sort(arr);
                string key = new string(arr);
                if (!dict.ContainsKey(key)) dict[key] = 0;
                dict[key]++;
            }
        }

        int total = 0;
        foreach (var val in dict.Values)
        {
            if (val > 1)
                total += (val * (val - 1)) / 2;
        }
        return total;

    }

}

class Solution
{
    public static void Main(string[] args)
    {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        int q = Convert.ToInt32(Console.ReadLine().Trim());

        for (int qItr = 0; qItr < q; qItr++)
        {
            string s = Console.ReadLine();

            int result = Result.sherlockAndAnagrams(s);

            textWriter.WriteLine(result);
        }

        textWriter.Flush();
        textWriter.Close();
    }
}
