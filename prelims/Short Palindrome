using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'shortPalindrome' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts STRING s as parameter.
     */

    public static int shortPalindrome(string s)
    {
        
        const int MOD = 1000000007;
        long[] first = new long[26];
        long[,] second = new long[26, 26];
        long[] third = new long[26];
        long result = 0;

        foreach (char ch in s)
        {
            int idx = ch - 'a';
            result = (result + third[idx]) % MOD;
            for (int j = 0; j < 26; j++)
                third[j] = (third[j] + second[j, idx]) % MOD;
            for (int j = 0; j < 26; j++)
                second[j, idx] = (second[j, idx] + first[j]) % MOD;
            first[idx] = (first[idx] + 1) % MOD;
        }

        return (int)(result % MOD);

    }

}

class Solution
{
    public static void Main(string[] args)
    {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        string s = Console.ReadLine();

        int result = Result.shortPalindrome(s);

        textWriter.WriteLine(result);

        textWriter.Flush();
        textWriter.Close();
    }
}
