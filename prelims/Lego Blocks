using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Result
{

    /*
     * Complete the 'legoBlocks' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts following parameters:
     *  1. INTEGER n
     *  2. INTEGER m
     */

    public static int legoBlocks(int n, int m)
    {
    int mod = 1000000007;
    long[] ways = new long[m + 1];
    ways[0] = 1;
    for (int i = 1; i <= m; i++)
    {
        ways[i] = ways[i - 1];
        if (i - 2 >= 0) ways[i] = (ways[i] + ways[i - 2]) % mod;
        if (i - 3 >= 0) ways[i] = (ways[i] + ways[i - 3]) % mod;
        if (i - 4 >= 0) ways[i] = (ways[i] + ways[i - 4]) % mod;
    }
    long[] total = new long[m + 1];
    for (int i = 1; i <= m; i++)
    {
        total[i] = 1;
        for (int j = 0; j < n; j++)
            total[i] = (total[i] * ways[i]) % mod;
    }
    long[] solid = new long[m + 1];
    solid[0] = 0;
    for (int width = 1; width <= m; width++)
    {
        solid[width] = total[width];
        for (int cut = 1; cut < width; cut++)
            solid[width] = (solid[width] - (solid[cut] * total[width - cut]) % mod + mod) % mod;
    }
    return (int)solid[m];

    }

}

class Solution
{
    public static void Main(string[] args)
    {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        int t = Convert.ToInt32(Console.ReadLine().Trim());

        for (int tItr = 0; tItr < t; tItr++)
        {
            string[] firstMultipleInput = Console.ReadLine().TrimEnd().Split(' ');

            int n = Convert.ToInt32(firstMultipleInput[0]);

            int m = Convert.ToInt32(firstMultipleInput[1]);

            int result = Result.legoBlocks(n, m);

            textWriter.WriteLine(result);
        }

        textWriter.Flush();
        textWriter.Close();
    }
}
